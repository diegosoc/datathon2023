[tool.setuptools.packages.find]
include = ["volv_packages*"]

[tool.isort]
py_version = 310
profile = "black"
line_length = 120

[tool.black]
line-length = 120
target-version = ['py310']


[tool.pytest.ini_options]

pythonpath = ["."]
#please if you are not going to debug tests, and is only testing like in github actions add -ra flag at the end addopts
addopts = """
    --cov-append
    --cov volv_packages -ra
    --cov-config pyproject.toml
    --cov-report xml:coverage.xml
    --cov-report term-missing
    --import-mode=importlib
    """

#if you want to debug included --no-cov
testpaths ="tests/"


[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
omit = ["tests/*",]


[tool.flake8]
ignore = ['E231', 'E241']
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 120
count = true

[tool.ruff]
target-version= "py310"
line-length = 120
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E501"]  # Black takes care of line-too-long
#Adding "logging_setup.logger" to logger-objects will ensure that logging_setup.logger is treated as a logging.
#Logger object when imported from other modules (e.g., from logging_setup import logger).
logger-objects = ["logging_setup.logger"]
output-format = "grouped"  #grouped or github

[tool.ruff.format]
quote-style = "single"



[tool.ruff.isort]
known-first-party = ["volv_packages"]

[tool.ruff.per-file-ignores]
"{tests,docs}/*" = ["PLR2004","PLR0913"]
"{tests,docs,tools,static,features,docs}/*" = ["T201"]  # Check print statement for kedro/ only


[tool.mypy]
python_version="3.10"

[[tool.mypy.overrides]]
module = [
    "volv_packages",

]
ignore_missing_imports = true